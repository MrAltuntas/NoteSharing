openapi: 3.0.3
info:
  title: Note Sharing API
  description: API for a course note sharing platform
  version: 1.0.0
  contact:
    name: API Support
    email: support@notesharing.com
servers:
  - url: http://localhost:8080
    description: Local development server
tags:
  - name: auth
    description: Authentication operations
  - name: courses
    description: Course management operations
  - name: notes
    description: Note management operations

paths:
  # Authentication Endpoints
  /api/v1/auth/register:
    post:
      tags:
        - auth
      summary: Register a new user
      description: Creates a new user account in the system
      operationId: register
      responses:
        '200':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "User registered successfully"
                  userId:
                    type: integer
                    example: 12345
                  username:
                    type: string
                    example: "newuser"
                  email:
                    type: string
                    example: "newuser@example.com"

  /api/v1/auth/login:
    post:
      tags:
        - auth
      summary: User login
      description: Authenticates a user and returns a JWT token
      operationId: login
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Login successful"
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ"
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 12345
                      username:
                        type: string
                        example: "testuser"
                      email:
                        type: string
                        example: "user@example.com"
                      role:
                        type: string
                        example: "USER"

  /api/v1/auth/validate:
    post:
      tags:
        - auth
      summary: Validate token
      description: Validates a JWT token and returns its status
      operationId: validateToken
      responses:
        '200':
          description: Token validation response
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Token is valid"
                  expires:
                    type: string
                    format: date-time
                    example: "2025-04-30T16:00:00.000Z"
                  userId:
                    type: integer
                    example: 12345

  # Course Endpoints
  /api/v1/courses:
    post:
      tags:
        - courses
      summary: Create a new course
      description: Creates a new course in the system
      operationId: createCourse
      responses:
        '201':
          description: Course created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseResponse'

    get:
      tags:
        - courses
      summary: Get all courses
      description: Returns a list of all courses
      operationId: getAllCourses
      responses:
        '200':
          description: List of courses
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Courses retrieved successfully"
                  totalCourses:
                    type: integer
                    example: 3
                  courses:
                    type: array
                    items:
                      $ref: '#/components/schemas/Course'

  /api/v1/courses/{courseId}:
    parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
        description: ID of the course

    get:
      tags:
        - courses
      summary: Get course by ID
      description: Returns a course by its ID
      operationId: getCourseById
      responses:
        '200':
          description: Course information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseResponse'

    put:
      tags:
        - courses
      summary: Update course
      description: Updates an existing course
      operationId: updateCourse
      responses:
        '200':
          description: Course updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseResponse'

    delete:
      tags:
        - courses
      summary: Delete course
      description: Deletes a course by its ID
      operationId: deleteCourse
      responses:
        '200':
          description: Course deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Course deleted successfully"
                  courseId:
                    type: integer
                    format: int64
                    example: 101

  /api/v1/courses/{courseId}/rate:
    parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
        description: ID of the course

    post:
      tags:
        - courses
      summary: Rate course
      description: Adds a rating to a course
      operationId: rateCourse
      responses:
        '200':
          description: Course rated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Course rated successfully"
                  courseId:
                    type: integer
                    format: int64
                    example: 101
                  rating:
                    type: number
                    format: float
                    example: 4.5
                  totalRatings:
                    type: integer
                    example: 132

  /api/v1/courses/search:
    get:
      tags:
        - courses
      summary: Search courses
      description: Searches for courses based on a query
      operationId: searchCourses
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
          description: Search query
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Search results retrieved successfully"
                  query:
                    type: string
                    example: "spring"
                  totalResults:
                    type: integer
                    example: 2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Course'

  /api/v1/courses/{courseId}/visit:
    parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
        description: ID of the course

    post:
      tags:
        - courses
      summary: Visit course
      description: Records a visit to a course
      operationId: visitCourse
      responses:
        '200':
          description: Course visit recorded
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Course visit recorded"
                  courseId:
                    type: integer
                    format: int64
                    example: 101
                  visitCount:
                    type: integer
                    example: 245

  # Note Endpoints
  /api/v1/notes/courses/{courseId}:
    parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
        description: ID of the course

    post:
      tags:
        - notes
      summary: Add note
      description: Adds a note to a course
      operationId: addNote
      responses:
        '201':
          description: Note added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteResponse'

    get:
      tags:
        - notes
      summary: Get notes by course ID
      description: Returns all notes for a course
      operationId: getNotesByCourseId
      responses:
        '200':
          description: List of notes
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Notes retrieved successfully"
                  courseId:
                    type: integer
                    format: int64
                    example: 101
                  totalNotes:
                    type: integer
                    example: 3
                  notes:
                    type: array
                    items:
                      $ref: '#/components/schemas/Note'

  /api/v1/notes/{noteId}:
    parameters:
      - name: noteId
        in: path
        required: true
        schema:
          type: integer
          format: int64
        description: ID of the note

    get:
      tags:
        - notes
      summary: Get note by ID
      description: Returns a note by its ID
      operationId: getNoteById
      responses:
        '200':
          description: Note information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteResponse'

    put:
      tags:
        - notes
      summary: Update note
      description: Updates an existing note
      operationId: updateNote
      responses:
        '200':
          description: Note updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteResponse'

    delete:
      tags:
        - notes
      summary: Delete note
      description: Deletes a note by its ID
      operationId: deleteNote
      responses:
        '200':
          description: Note deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Note deleted successfully"
                  noteId:
                    type: integer
                    format: int64
                    example: 201

components:
  schemas:
    Course:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 101
        title:
          type: string
          example: "Sample Course 101"
        description:
          type: string
          example: "This is a sample course description. This course contains information to help you learn Spring Boot."
        instructor:
          type: string
          example: "Prof. John Doe"
        createdAt:
          type: string
          format: date-time
          example: "2025-03-30T14:30:00.000Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-03-30T14:30:00.000Z"
        rating:
          type: number
          format: float
          example: 4.8
        totalRatings:
          type: integer
          example: 120
        totalVisits:
          type: integer
          example: 2345
        tags:
          type: array
          items:
            type: string
          example: ["spring", "java", "web", "programming"]

    CourseResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Course created successfully"
        course:
          $ref: '#/components/schemas/Course'

    Note:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 201
        courseId:
          type: integer
          format: int64
          example: 101
        title:
          type: string
          example: "Sample Note 201"
        content:
          type: string
          example: "This is a sample note content. This note contains important information about Spring Boot."
        author:
          type: string
          example: "User123"
        createdAt:
          type: string
          format: date-time
          example: "2025-03-30T15:30:00.000Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-03-30T15:30:00.000Z"
        likes:
          type: integer
          example: 25
        attachments:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 301
              name:
                type: string
                example: "document.pdf"
              size:
                type: integer
                example: 1048576

    NoteResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Note added successfully"
        note:
          $ref: '#/components/schemas/Note'